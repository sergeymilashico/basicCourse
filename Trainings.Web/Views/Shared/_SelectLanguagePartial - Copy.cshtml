@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.TwoLetterISOLanguageName })
        .ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

    @*<div class="flag flag-us"></div>
    <select class="selectpicker" data-width="fit">
        <option data-content='<span class="flag-icon flag-icon-us"></span> English'>English</option>
        <option  data-content='<span class="flag-icon flag-icon-mx"></span> Español'>Español</option>
    </select>
    <select class="selectpicker" data-width="fit">
        <option data-content='<i class="fa-solid fa-flag-usa"></i>'>English</option>
        <option  data-content='<i class="fa-solid fa-flag-russian"></i>'>Russian</option>
    </select>*@

    <a class="nav-link py-3 px-0 px-lg-3 rounded dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
    Select Language
    </a>
    <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
        @foreach(var culture in cultureItems)
        {
            <li>
                <a class="dropdown-item" asp-controller="Home" asp-action="SetLanguage" asp-route-returnUrl="@returnUrl" asp-route-culture="@culture.Value">@culture.Text</a>
            </li>
        }
    </ul>   