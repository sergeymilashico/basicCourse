@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>().RequestCulture.Culture;
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.TwoLetterISOLanguageName })
        .ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

<a class="nav-link py-3 px-0 px-lg-3 rounded dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
    @if (requestCulture.TwoLetterISOLanguageName == "ru") { <span class="flag-icon flag-icon-ua" /> }
    @if (requestCulture.TwoLetterISOLanguageName == "en") { <span class="flag-icon flag-icon-us" /> }
</a>
   
<ul class="dropdown-menu" aria-labelledby="navbarDropdown">
    @for(var i = 0; i < cultureItems.Count; i++)
    {
        if (@cultureItems[i].Value == requestCulture.Name) continue;
            
        <li>
            <a class="dropdown-item" asp-controller="Home" asp-action="SetLanguage" asp-route-returnUrl="@returnUrl" asp-route-culture="@cultureItems[i].Value">
                @if (@cultureItems[i].Text == "ru") { <span class="flag-icon flag-icon-ua" /> }
                @if (@cultureItems[i].Text == "en") { <span class="flag-icon flag-icon-us" /> }
            </a>
        </li>
    }
</ul>   